Universidade Federal Fluminense
Engenharia de Telecomunicações – Escola de Engenharia
Prof. Natalia Castro Fernandes
04/2018

Trabalho de Sistemas de Computação 

Objetivo: Desenvolver, em trio, dupla ou individualmente, um sistema de monitoração de pacientes remoto. Caso trabalhem em grupo, cada aluno deverá anunciar previamente qual parte será de sua responsabilidade dentro do trabalho.

Vocês deverão desenvolver três programas, um servidor e um cliente-paciente e um cliente-médico. 

O cliente-paciente deverá permitir:

- Cadastrar novo paciente (indicando o médico responsável) e aguardar autorização do médico para uso do sistema (0.25 pt);
- Autenticar com login e senha o usuário (0.25 pt);
- Enviar os dados monitorados (batimentos cardíacos, pressão, temperatura, localização) a cada 
minuto do paciente para o servidor [[Aqui, na ausência de sensores reais, sortear valores aleatórios compatíveis]] (0.5 pt);
- Receber alarmes sobre potenciais problemas e dicas sobre o que fazer, tocar um som e dar a opção de ver o conteúdo (0.25 pt);
- Receber alarmes de remédios, tocar um som e mostrá-los na tela (0.25 pt);
- Chat com um médico (offline) —atenção: o chat não deve impedir a recepção de alarmes (0.75 pt);
- Receber alarmes a cada resposta do médico e tocar um som (0.25);
- Enviar arquivos de vídeo ou foto para o médico (0.75);
- Oferecer uma opção para sair do programa, que deve finalizar, sem erros, o cliente (0.25 pt).

O cliente-médico deverá permitir:
- Cadastrar novo usuário médico (0.25 pt);
- Receber alarme de pedido de novo paciente, tocando um som (0.25 pt);
- Autorizar novo paciente (0.25 pt);
- Autenticar com login e senha o usuário (0.25 pt);
- Listar pacientes (0.25 pt);
- Ver histórico de qualquer um de seus pacientes (0.75 pt);
- Receber alarmes sobre pacientes com problemas, tocando um som (0.25 pt);
- Gerar alarmes para pacientes sobre potenciais problemas (0.5);
- Cadastrar remédios com seus respectivos horários para um paciente (0.5);
- Chat com um dos seus pacientes (offline) – O chat só pode ter duas pessoas: o médico e o paciente (0.75)—atenção: o chat não deve impedir a recepção de alarmes;
- Receber alarmes a cada nova mensagem ou resposta de um de seus pacientes, tocando um som (0.25);
- Receber arquivos de vídeo ou foto enviados por um paciente (0.25);
- Oferecer uma opção para sair do programa, que deve finalizar, sem erros, o cliente (0.25 pt).


O servidor deverá:
- Atender a múltiplos clientes simultaneamente (perde 3pt se não fizer);
- Guardar lista de clientes pacientes e clientes médicos no disco, relacionando um médico para cada paciente (0.25 pt);
- Cadastrar novos médicos e novos pacientes (0.25 pt);
- Autenticar clientes (0.5 pt);
- Receber e armazenar automaticamente os dados de monitoramento, mensagens de texto, vídeo ou foto de um paciente (1.0 pt);
- Receber e armazenar automaticamente mensagens de texto de um médico para um paciente (0.5);
- Enviar para o paciente ou para o médico automaticamente alarmes sempre que o cliente se logar e existirem dados para esse cliente (0.5);
- Gerar alarmes para o médico sempre que um novo cadastro de paciente for direcionado para ele (0.25);
- Enviar os dados de monitoramento, mensagens de texto, vídeo ou foto sempre que requisitado por um cliente [[[o cliente não precisa armazenar nenhum dado localmente. Tudo deve ficar no servidor e ser repassado quando requisitado.]]] [[[a requisição de mensagens deve ser feita como um intervalo de tempo ou, por padrão, as 10 últimas movimentações]]] (1.0)
- Gerar um alarme para paciente e médico se a última medida recebida estiver fora do padrão aceitável [[Alarmar pressão, batimento cardíaco ou temperatura muito alta ou muito baixa]]; (0.25)
- Proteger o acesso aos dados dos chats em disco com a solução dos leitores-escritores, assumindo um arquivo para cada par paciente-médico (0,75 pt);

Atenção:

- Os programas devem funcionar em um sistema Linux Ubuntu (perde 2 pt se não fizer).  
- O servidor deve funcionar na porta 50999 (perde 0,5 pt se não fizer).
- Todas as informações que forem impressas na tela devem estar organizadas (perde 2 pt se não fizer).
- Os sons devem tocar de forma ordenada e diferenciada (perde 2 pt se não fizer)


Além disso, perde ponto se:

- Não criar threads ou processos filhos – 3 pt
- Não usar sockets – 3 pt
- Não usar semáforos no local correto – 2 pt
- Não garantir que os programas desenvolvidos estejam protegidos contra erros que possam finalizar o programa inesperadamente – 1 pt
- Não conseguir mostrar os dados armazenados em banco de dados com interface apropriada, caso esteja usando algum banco de dados – 2pt
- Copiar da Internet algum código e não marcar o que foi copiado ou adaptado, dizendo a fonte – 10 pt
- Pedir para alguém fazer parte do trabalho ou o trabalho integralmente (Você só pode pedir ajuda à professora ou aos colegas da sala) – 10pt
- Copiar o trabalho ou parte dele de algum colega de sala – 10 pt

Ganha pontos extras se:

- Fizer interface gráfica para os clientes ( até 2 pt a mais)
- Entregar 2 semanas ou mais antes do prazo (1 pt a mais)

Prazo de entrega da formação dos grupos e divisão de responsabilidades: 03/05
Prazo de entrega do trabalho final por e-mail: 03/07

Forma de entrega: 
- Formação dos grupos e divisão de responsabilidades por escrito na aula.
- Envio dos códigos finais para o email nataliacf@id.uff.br com o título ‘[siscomp18-01]’, indicando os nomes dos autores;
- Marcar um dia com a professora para apresentar o sistema funcionando, usando máquinas virtuais – preferencialmente trazer uma máquina com tudo instalado e testado, para facilitar a apresentação e diminuir a chance de perder pontos;

O não cumprimento de qualquer um dos itens da forma de entrega levará a anulação do trabalho. Qualquer indício de que o trabalho não foi integralmente feito pelo grupo, a nota será zerada. Qualquer um dos membros que não demonstrar ter feito a parte sob sua responsabilidade, terá a nota zerada. A justiça na divisão entre as partes também será usada na avaliação individual.





